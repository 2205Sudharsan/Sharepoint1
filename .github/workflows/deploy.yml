name: Deploy SharePoint Web Part

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '10'  # Specify the Node.js version

      # 3. Install Gulp globally
      - name: Install Gulp@3.9.1
        run: npm install --global gulp-cli

      # 4. Cache Node modules
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      # 5. Install Project Dependencies
      - name: Install Dependencies
        run: npm install --silent

      # 6. Bundle the Project
      - name: Bundle the Package
        run: gulp bundle --ship --silent

      # 7. Package the Solution
      - name: Package Solution
        run: gulp package-solution --ship --silent

      # 8. Upload the Packaged .sppkg File as an Artifact
      - name: Upload Package Artifact
        uses: actions/upload-artifact@v3
        with:
          name: sharepoint-package
          path: ./sharepoint/solution/*.sppkg

      # 9. Install PnP PowerShell Module
      - name: Install PnP PowerShell
        shell: pwsh
        run: |
          Install-Module -Name PnP.PowerShell -Force -Scope CurrentUser -AllowClobber

      # 10. Deploy to SharePoint App Catalog
      - name: Deploy to SharePoint App Catalog
        shell: pwsh
        env:
          SP_APP_CATALOG_URL: ${{ secrets.SP_APP_CATALOG_URL }}
          SP_CLIENT_ID: ${{ secrets.SP_CLIENT_ID }}
          SP_CLIENT_SECRET: ${{ secrets.SP_CLIENT_SECRET }}
        run: |
          # Connect to SharePoint App Catalog using Client ID and Secret
          Connect-PnPOnline -Url $env:SP_APP_CATALOG_URL -ClientId $env:SP_CLIENT_ID -ClientSecret $env:SP_CLIENT_SECRET -Tenant xllearnings.sharepoint.com
          
          # List the package path
          $packagePath = Get-ChildItem -Path "./sharepoint/solution/" -Filter *.sppkg | Select-Object -First 1
          if ($packagePath) {
            Write-Host "Package Path: $($packagePath.FullName)"
            Add-PnPApp -Path $packagePath.FullName -Scope Tenant -Overwrite
          } else {
            Write-Error "No .sppkg file found in the solution folder."
            exit 1
          }

          # Deploy the app if it's not already deployed
          $app = Get-PnPApp | Where-Object { $_.Title -eq "sharepoint-1" } # Replace with your actual app name
          if ($app -and -not $app.IsDeployed) {
            Install-PnPApp -Identity $app.Id -Scope Tenant
          }
